"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[686],{9271:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var a=n(3117),l=n(102),r=(n(7294),n(3905)),i=["components"],o={title:"Reaction",description:"The reaction listener executes when a message is reacted to."},s="Reaction",c={unversionedId:"listener/reaction",id:"listener/reaction",title:"Reaction",description:"The reaction listener executes when a message is reacted to.",source:"@site/internal/automations/listener/reaction.md",sourceDirName:"listener",slug:"/listener/reaction",permalink:"/comfyai_docs_build/automations/listener/reaction",editUrl:"test/internal/automations/listener/reaction.md",tags:[],version:"current",lastUpdatedAt:1642882923,formattedLastUpdatedAt:"1/22/2022",frontMatter:{title:"Reaction",description:"The reaction listener executes when a message is reacted to."},sidebar:"build",previous:{title:"Leave",permalink:"/comfyai_docs_build/automations/listener/leave"},next:{title:"Role",permalink:"/comfyai_docs_build/automations/listener/role"}},u=[{value:"Listener expression",id:"listener-expression",children:[],level:4},{value:"Possible arguments",id:"possible-arguments",children:[{value:"Emote",id:"emote",children:[{value:"Types of emoji",id:"types-of-emoji",children:[],level:4},{value:"Example",id:"example",children:[],level:4}],level:3},{value:"Message",id:"message",children:[{value:"Example",id:"example-1",children:[],level:4}],level:3},{value:"Channel",id:"channel",children:[{value:"Example",id:"example-2",children:[],level:4}],level:3}],level:2},{value:"Additional examples",id:"additional-examples",children:[],level:2}],p={toc:u};function m(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reaction"},"Reaction"),(0,r.kt)("h4",{id:"listener-expression"},"Listener expression"),(0,r.kt)("p",null,"The reaction listener executes when a message is reacted to."),(0,r.kt)("h2",{id:"possible-arguments"},"Possible arguments"),(0,r.kt)("h3",{id:"emote"},"Emote"),(0,r.kt)("p",null,"Defines which reaction emote to listen for."),(0,r.kt)("p",null,"This argument takes a Unicode or Discord Reaction Snowflake value."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Unicode Emote"),(0,r.kt)("td",{parentName:"tr",align:null},"Example: \ud83d\ude00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Snowflake Formatted Emote"),(0,r.kt)("td",{parentName:"tr",align:null},"Example: <:UwU:840311365813010492>")))),(0,r.kt)("p",null,"If you're unsure what the difference is, it doesn't matter, simply put your emoji into the Discord chatbox and Comfy will figure it out."),(0,r.kt)("h4",{id:"types-of-emoji"},"Types of emoji"),(0,r.kt)("p",null,"Unicode is a universal standard for encoding emoji into text. Discord supports these, and thus we have to as well. However, Discord also supports custom emotes to be uploaded, which they encode differently, in what's called a snowflake u64."),(0,r.kt)("p",null,"Here is what emoji looks like to a computer: U+1F600"),(0,r.kt)("p",null,"Here is what custom Discord emotes look like to a computer: <:UwU:840311365813010492>"),(0,r.kt)("p",null,"It isn't important what a snowflake is, just know that custom emoji appears as a special code when sent through Discord. When you're typing in your chat window you will see the custom emote, but when you view your commands with the /commands function, you will see the snowflake code."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Tip:")," Discord will show you the snowflake if you type \\ before the emoji like \\<:UwU:840311365813010492>."),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'when reaction emote= \ud83d\ude00 -> message content="A message was reacted to" channel="<#822510327911546890>"')),(0,r.kt)("p",null,'This will trigger when a message anywhere in the server is reacted to with the smiley face emoji. It will send a message with the text "A message was reacted to" to channel 822510327911546890.'),(0,r.kt)("h3",{id:"message"},"Message"),(0,r.kt)("p",null,"Defines a set of specific messages to listen to for reactions."),(0,r.kt)("p",null,"This argument takes a message Snowflake value."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Max Values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Message Snowflake"),(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null},"Example: 934204818023653418")))),(0,r.kt)("p",null,'You can acquire message snowflakes by enabling developer mode in Discord, then right click messages and click "Copy ID".'),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'when reaction emote= \ud83d\ude00 message= 934204818023653418, 934202785975656448 -> message content="A message was reacted to" channel="<#822510327911546890>"')),(0,r.kt)("p",null,"This will trigger when a reaction \ud83d\ude00 is made two either of the two messages defined in the message argument."),(0,r.kt)("h3",{id:"channel"},"Channel"),(0,r.kt)("p",null,"Defines a set of channels whose messages will be listened to for reactions."),(0,r.kt)("p",null,"This argument takes a channel mention value."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Max Values"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Channel Mention"),(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null},"Example: #channel-name (interpreted as <#822510327911546890>)")))),(0,r.kt)("p",null,"You do not need to follow a special procedure to get the snowflake like you do for messages. While typing your command simply type # and a list of channels will appear. Select one and Discord will highlight the channel name so you know it is richly linked. ComfyAI will always rich links as a Snowflake."),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'when reaction emote= \ud83d\ude00 channel= <#822510327911546890> -> message content="A message was reacted to" channel="<#822510327911546890>"')),(0,r.kt)("p",null,"This will trigger when a reaction \ud83d\ude00 is made on any message in the specified channel."),(0,r.kt)("h2",{id:"additional-examples"},"Additional examples"),(0,r.kt)("p",null,"None"))}m.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=l,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);