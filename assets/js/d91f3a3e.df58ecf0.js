"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[288],{1018:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=["components"],o={title:"Button",description:"The button listener executes when the button is pressed."},u="Button",s={unversionedId:"listener/button",id:"listener/button",title:"Button",description:"The button listener executes when the button is pressed.",source:"@site/internal/automations/listener/button.md",sourceDirName:"listener",slug:"/listener/button",permalink:"/comfyai_docs_build/automations/listener/button",editUrl:"test/internal/automations/listener/button.md",tags:[],version:"current",frontMatter:{title:"Button",description:"The button listener executes when the button is pressed."},sidebar:"build",previous:{title:"Leave",permalink:"/comfyai_docs_build/automations/listener/leave"},next:{title:"Reaction",permalink:"/comfyai_docs_build/automations/listener/reaction"}},p=[{value:"Listener expression",id:"listener-expression",children:[],level:4},{value:"Possible arguments",id:"possible-arguments",children:[{value:"Channel",id:"channel",children:[{value:"Example",id:"example",children:[],level:4}],level:3},{value:"Type",id:"type",children:[{value:"Example",id:"example-1",children:[],level:4}],level:3}],level:2},{value:"Additional examples",id:"additional-examples",children:[],level:2}],c={toc:p};function d(e){var t=e.components,o=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"button"},"Button"),(0,l.kt)("h4",{id:"listener-expression"},"Listener expression"),(0,l.kt)("p",null,"The button listener executes when the button is pressed."),(0,l.kt)("p",null,'Buttons are what Discord calls an "Interaction Component". They can be placed in channels and allow users to perform some action when clicked, such as opening a ticket.'),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Demo of Discord button interactions",src:n(3962).Z})),(0,l.kt)("p",null,"As soon as any command is registered with a button, the button will appear at the bottom of the defined channel. If you need to move the button to the bottom of the channel in the future you can use the command ",(0,l.kt)("inlineCode",{parentName:"p"},"/repost_button 057230579348578943")," the number being the interaction ID. This saves you having to remove and readd the button listener."),(0,l.kt)("h2",{id:"possible-arguments"},"Possible arguments"),(0,l.kt)("h3",{id:"channel"},"Channel"),(0,l.kt)("p",null,"Defines the channel where the button interaction is created."),(0,l.kt)("p",null,"This argument takes a channel mention value."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Max Values"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Channel Mention"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Example: #channel-name (interpreted as <#822510327911546890>)")))),(0,l.kt)("p",null,"You do not need to follow a special procedure to get the snowflake like you do for messages. While typing your command simply type # and a list of channels will appear. Select one and Discord will highlight the channel name so you know it is richly linked. ComfyAI will always rich links as a Snowflake."),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"when button channel=<#827599705285459999> -> ticket")),(0,l.kt)("p",null,"When the button is pressed a ticket is created."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"type"},"Type"),(0,l.kt)("p",null,"Defines the type of the button."),(0,l.kt)("p",null,"This argument takes a keyword value."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Primary"),(0,l.kt)("td",{parentName:"tr",align:null},"The default button type")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Link"),(0,l.kt)("td",{parentName:"tr",align:null},"A button that can contain a URL")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Emoji"),(0,l.kt)("td",{parentName:"tr",align:null},"A button that contains an emoji image inside")))),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"when button channel=<#827599705285459999> -> ticket")),(0,l.kt)("p",null,"When the button is pressed a ticket is created."),(0,l.kt)("h2",{id:"additional-examples"},"Additional examples"),(0,l.kt)("p",null,"None"))}d.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(u,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3962:function(e,t,n){t.Z=n.p+"assets/images/interaction_button-6cde2084662b01fd98801e4444eb89ef.png"}}]);